var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Renderer, ElementRef } from '@angular/core';
import { DropdownStateService } from '../../services/dropdown-state.service';
var Ng2MenuItem = (function () {
    function Ng2MenuItem(state, element, renderer) {
        this.state = state;
        this.element = element;
        this.renderer = renderer;
        this.preventClose = false;
    }
    Object.defineProperty(Ng2MenuItem.prototype, "isSelected", {
        get: function () {
            return this === this.state.dropdownState.selectedItem;
        },
        enumerable: true,
        configurable: true
    });
    Ng2MenuItem.prototype.select = function ($event) {
        this.state.dropdownState.select(this, true);
        if ($event) {
            $event.stopPropagation();
            $event.preventDefault();
        }
    };
    Ng2MenuItem.prototype.click = function () {
        this.state.dropdownState.onItemClicked.emit(this);
    };
    Ng2MenuItem.prototype.focus = function () {
        this.renderer.invokeElementMethod(this.element.nativeElement.children[0], 'focus');
    };
    return Ng2MenuItem;
}());
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], Ng2MenuItem.prototype, "preventClose", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], Ng2MenuItem.prototype, "value", void 0);
Ng2MenuItem = __decorate([
    Component({
        selector: 'ng2-menu-item',
        styleUrls: ['./style.scss'],
        templateUrl: './template.html'
    }),
    __metadata("design:paramtypes", [DropdownStateService,
        ElementRef,
        Renderer])
], Ng2MenuItem);
export { Ng2MenuItem };
//# sourceMappingURL=ng2-menu-item.js.map