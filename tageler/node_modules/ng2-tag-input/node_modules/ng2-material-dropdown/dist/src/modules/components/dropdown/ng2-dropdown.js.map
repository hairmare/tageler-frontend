{"version":3,"file":"ng2-dropdown.js","sourceRoot":"","sources":["../../../../../src/modules/components/dropdown/ng2-dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    HostListener,\n    Component,\n    ContentChild,\n    Output,\n    EventEmitter,\n    Input\n} from '@angular/core';\n\nimport { Ng2DropdownButton } from '../button/ng2-dropdown-button';\nimport { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-dropdown',\n    templateUrl: './template.html',\n    providers: [ DropdownStateService ]\n})\nexport class Ng2Dropdown {\n    // get children components\n    @ContentChild(Ng2DropdownButton) public button: Ng2DropdownButton;\n    @ContentChild(Ng2DropdownMenu) public menu: Ng2DropdownMenu;\n\n    @Input() public dynamicUpdate: boolean = true;\n\n    // outputs\n    @Output() public onItemClicked: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public onItemSelected: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public onShow: EventEmitter<Ng2Dropdown> = new EventEmitter<Ng2Dropdown>();\n    @Output() public onHide: EventEmitter<Ng2Dropdown> = new EventEmitter<Ng2Dropdown>();\n\n    constructor(private state: DropdownStateService) {}\n\n    /**\n     * @name toggleMenu\n     * @desc toggles menu visibility\n     */\n    public toggleMenu(position = this.button.getPosition()): void {\n        this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n\n    /**\n     * - hides dropdown\n     * @name hide\n     */\n    public hide(): void {\n        this.menu.hide();\n        this.onHide.emit(this);\n    }\n\n    /**\n     * - shows dropdown\n     * @name show\n     * @param position\n     */\n    public show(position = this.button.getPosition()): void {\n        this.menu.show();\n\n        // update menu position based on its button's\n        this.menu.updatePosition(position);\n        this.onShow.emit(this);\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    private scrollListener() {\n        if (this.state.menuState.isVisible && this.button && this.dynamicUpdate) {\n            this.menu.updatePosition(this.button.getPosition());\n        }\n    }\n\n    ngOnInit() {\n        this.state.dropdownState.onItemClicked.subscribe(item => {\n            this.onItemClicked.emit(item);\n\n            if (item.preventClose) {\n                return;\n            }\n\n            this.hide.call(this);\n        });\n\n        if (this.button) {\n            this.button.onMenuToggled.subscribe(() => {\n                this.toggleMenu();\n            });\n        }\n\n        this.state.dropdownState.onItemSelected.subscribe(item => this.onItemSelected.emit(item));\n    }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}