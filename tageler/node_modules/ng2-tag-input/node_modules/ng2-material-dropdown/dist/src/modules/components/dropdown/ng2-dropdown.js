var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { HostListener, Component, ContentChild, Output, EventEmitter, Input } from '@angular/core';
import { Ng2DropdownButton } from '../button/ng2-dropdown-button';
import { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';
import { DropdownStateService } from '../../services/dropdown-state.service';
var Ng2Dropdown = (function () {
    function Ng2Dropdown(state) {
        this.state = state;
        this.dynamicUpdate = true;
        this.onItemClicked = new EventEmitter();
        this.onItemSelected = new EventEmitter();
        this.onShow = new EventEmitter();
        this.onHide = new EventEmitter();
    }
    Ng2Dropdown.prototype.toggleMenu = function (position) {
        if (position === void 0) { position = this.button.getPosition(); }
        this.state.menuState.isVisible ? this.hide() : this.show(position);
    };
    Ng2Dropdown.prototype.hide = function () {
        this.menu.hide();
        this.onHide.emit(this);
    };
    Ng2Dropdown.prototype.show = function (position) {
        if (position === void 0) { position = this.button.getPosition(); }
        this.menu.show();
        this.menu.updatePosition(position);
        this.onShow.emit(this);
    };
    Ng2Dropdown.prototype.scrollListener = function () {
        if (this.state.menuState.isVisible && this.button && this.dynamicUpdate) {
            this.menu.updatePosition(this.button.getPosition());
        }
    };
    Ng2Dropdown.prototype.ngOnInit = function () {
        var _this = this;
        this.state.dropdownState.onItemClicked.subscribe(function (item) {
            _this.onItemClicked.emit(item);
            if (item.preventClose) {
                return;
            }
            _this.hide.call(_this);
        });
        if (this.button) {
            this.button.onMenuToggled.subscribe(function () {
                _this.toggleMenu();
            });
        }
        this.state.dropdownState.onItemSelected.subscribe(function (item) { return _this.onItemSelected.emit(item); });
    };
    return Ng2Dropdown;
}());
__decorate([
    ContentChild(Ng2DropdownButton),
    __metadata("design:type", Ng2DropdownButton)
], Ng2Dropdown.prototype, "button", void 0);
__decorate([
    ContentChild(Ng2DropdownMenu),
    __metadata("design:type", Ng2DropdownMenu)
], Ng2Dropdown.prototype, "menu", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], Ng2Dropdown.prototype, "dynamicUpdate", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], Ng2Dropdown.prototype, "onItemClicked", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], Ng2Dropdown.prototype, "onItemSelected", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], Ng2Dropdown.prototype, "onShow", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], Ng2Dropdown.prototype, "onHide", void 0);
__decorate([
    HostListener('window:scroll'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], Ng2Dropdown.prototype, "scrollListener", null);
Ng2Dropdown = __decorate([
    Component({
        selector: 'ng2-dropdown',
        templateUrl: './template.html',
        providers: [DropdownStateService]
    }),
    __metadata("design:paramtypes", [DropdownStateService])
], Ng2Dropdown);
export { Ng2Dropdown };
//# sourceMappingURL=ng2-dropdown.js.map